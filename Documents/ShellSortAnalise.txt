0001  ShellSort(int[] : a, int : tam): int[] { //kk eae men
              [0001, 0001] (0000,         Id) {ShellSort}
              [0001, 0010] (0028,     BeginP) {(}
              [0001, 0011] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0001, 0014] (0030,     BeginC) {[}
              [0001, 0015] (0031,       EndC) {]}
          VECTOR_TYPE = TYPE BeginC EndC 
              [0001, 0017] (0047,    SepPont) {:}
              [0001, 0019] (0000,         Id) {a}
          PARAMITER = VECTOR_TYPE SepPont Id 
          PARAMITER_LIST = PARAMITER 
              [0001, 0020] (0039,       SepV) {,}
              [0001, 0022] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0001, 0026] (0047,    SepPont) {:}
              [0001, 0028] (0000,         Id) {tam}
          PARAMITER = TYPE SepPont Id 
          PARAMITER_LIST = PARAMITER_LIST SepV PARAMITER 
              [0001, 0031] (0029,       EndP) {)}
              [0001, 0032] (0047,    SepPont) {:}
              [0001, 0034] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0001, 0037] (0030,     BeginC) {[}
              [0001, 0038] (0031,       EndC) {]}
          VECTOR_TYPE = TYPE BeginC EndC 
          TYPE_FUNC = VECTOR_TYPE 
              [0001, 0040] (0032,    BeginCh) {{}
0002      int h = tam/2;
              [0002, 0005] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0002, 0009] (0000,         Id) {h}
              [0002, 0011] (0021,      OpAtr) {=}
              [0002, 0013] (0000,         Id) {tam}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0002, 0016] (0010,    OpArdiv) {/}
          OP_AR = OpArdiv 
              [0002, 0017] (0034,   ConstInt) {2}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
          DECLARATION_TYPE = ATTRIBUTION 
              [0002, 0018] (0040,      SepPV) {;}
0003      int i, j;
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = TYPE DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMAND 
              [0003, 0005] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0003, 0009] (0000,         Id) {i}
          ATTRIBUTION = Id 
          DECLARATION_TYPE = ATTRIBUTION 
              [0003, 0010] (0039,       SepV) {,}
              [0003, 0012] (0000,         Id) {j}
          ATTRIBUTION = Id 
          DECLARATION_TYPE = ATTRIBUTION 
              [0003, 0013] (0040,      SepPV) {;}
0004      while(h >= 1){
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          DECLARATION_LIST = DECLARATION_TYPE SepV DECLARATION_LIST 
          VAR_DECLARATION = TYPE DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0004, 0005] (0025,    InsInWh) {while}
              [0004, 0010] (0028,     BeginP) {(}
              [0004, 0011] (0000,         Id) {h}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
              [0004, 0013] (0013,      OpReD) {>=}
          OP_RE = OpReD 
              [0004, 0016] (0034,   ConstInt) {1}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_RL OP_RE OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0004, 0017] (0029,       EndP) {)}
              [0004, 0018] (0032,    BeginCh) {{}
0005          for(i = 0 to  h){
              [0005, 0009] (0027,   InsInfor) {for}
              [0005, 0012] (0028,     BeginP) {(}
              [0005, 0013] (0000,         Id) {i}
              [0005, 0015] (0021,      OpAtr) {=}
              [0005, 0017] (0034,   ConstInt) {0}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
              [0005, 0019] (0042,      IntTo) {to}
              [0005, 0023] (0000,         Id) {h}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0005, 0024] (0029,       EndP) {)}
              [0005, 0025] (0032,    BeginCh) {{}
0006              j = i;
              [0006, 0013] (0000,         Id) {j}
              [0006, 0015] (0021,      OpAtr) {=}
              [0006, 0017] (0000,         Id) {i}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
          DECLARATION_TYPE = ATTRIBUTION 
              [0006, 0018] (0040,      SepPV) {;}
0007              while(j+h < tam){
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMAND 
              [0007, 0013] (0025,    InsInWh) {while}
              [0007, 0018] (0028,     BeginP) {(}
              [0007, 0019] (0000,         Id) {j}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0007, 0020] (0008,     OpArAd) {+}
          OP_AR = OpArAd 
              [0007, 0021] (0000,         Id) {h}
          ATRIBVALUE = Id 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
              [0007, 0023] (0013,      OpReD) {<}
          OP_RE = OpReD 
              [0007, 0025] (0000,         Id) {tam}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_RL OP_RE OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0007, 0028] (0029,       EndP) {)}
              [0007, 0029] (0032,    BeginCh) {{}
0008                  if(a[j] > a[j+h]){
              [0008, 0017] (0022,     InsSIf) {if}
              [0008, 0019] (0028,     BeginP) {(}
              [0008, 0020] (0000,         Id) {a}
              [0008, 0021] (0030,     BeginC) {[}
              [0008, 0022] (0000,         Id) {j}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0008, 0023] (0031,       EndC) {]}
          ATRIBVALUE = Id BeginC OPERATION_AR EndC 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
              [0008, 0025] (0013,      OpReD) {>}
          OP_RE = OpReD 
              [0008, 0027] (0000,         Id) {a}
              [0008, 0028] (0030,     BeginC) {[}
              [0008, 0029] (0000,         Id) {j}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0008, 0030] (0008,     OpArAd) {+}
          OP_AR = OpArAd 
              [0008, 0031] (0000,         Id) {h}
          ATRIBVALUE = Id 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
              [0008, 0032] (0031,       EndC) {]}
          ATRIBVALUE = Id BeginC OPERATION_AR EndC 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_RL OP_RE OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0008, 0033] (0029,       EndP) {)}
              [0008, 0034] (0032,    BeginCh) {{}
0009                      int temp = a[j];
              [0009, 0021] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0009, 0025] (0000,         Id) {temp}
              [0009, 0030] (0021,      OpAtr) {=}
              [0009, 0032] (0000,         Id) {a}
              [0009, 0033] (0030,     BeginC) {[}
              [0009, 0034] (0000,         Id) {j}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0009, 0035] (0031,       EndC) {]}
          ATRIBVALUE = Id BeginC OPERATION_AR EndC 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
          DECLARATION_TYPE = ATTRIBUTION 
              [0009, 0036] (0040,      SepPV) {;}
0010                      a[j] = a[j+h];
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = TYPE DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMAND 
              [0010, 0021] (0000,         Id) {a}
              [0010, 0022] (0030,     BeginC) {[}
              [0010, 0023] (0000,         Id) {j}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0010, 0024] (0031,       EndC) {]}
              [0010, 0026] (0021,      OpAtr) {=}
              [0010, 0028] (0000,         Id) {a}
              [0010, 0029] (0030,     BeginC) {[}
              [0010, 0030] (0000,         Id) {j}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0010, 0031] (0008,     OpArAd) {+}
          OP_AR = OpArAd 
              [0010, 0032] (0000,         Id) {h}
          ATRIBVALUE = Id 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
              [0010, 0033] (0031,       EndC) {]}
          ATRIBVALUE = Id BeginC OPERATION_AR EndC 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id BeginC OPERATION_AR EndC OpAtr LIST_OPERATION_LG 
          DECLARATION_TYPE = ATTRIBUTION 
              [0010, 0034] (0040,      SepPV) {;}
0011                      a[j+h] = temp;
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0011, 0021] (0000,         Id) {a}
              [0011, 0022] (0030,     BeginC) {[}
              [0011, 0023] (0000,         Id) {j}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0011, 0024] (0008,     OpArAd) {+}
          OP_AR = OpArAd 
              [0011, 0025] (0000,         Id) {h}
          ATRIBVALUE = Id 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
              [0011, 0026] (0031,       EndC) {]}
              [0011, 0028] (0021,      OpAtr) {=}
              [0011, 0030] (0000,         Id) {temp}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id BeginC OPERATION_AR EndC OpAtr LIST_OPERATION_LG 
          DECLARATION_TYPE = ATTRIBUTION 
              [0011, 0034] (0040,      SepPV) {;}
0012                  }
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0012, 0017] (0033,      EndCh) {}}
0013                  j = j+h;
          COMAND = InsSIf BeginP LIST_OPERATION_LG EndP BeginCh COMANDS_LIST EndCh 
          COMANDS_LIST = COMAND 
              [0013, 0017] (0000,         Id) {j}
              [0013, 0019] (0021,      OpAtr) {=}
              [0013, 0021] (0000,         Id) {j}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0013, 0022] (0008,     OpArAd) {+}
          OP_AR = OpArAd 
              [0013, 0023] (0000,         Id) {h}
          ATRIBVALUE = Id 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
          DECLARATION_TYPE = ATTRIBUTION 
              [0013, 0024] (0040,      SepPV) {;}
0014              }
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0014, 0013] (0033,      EndCh) {}}
0015          }
          LOOP = InsInWh BeginP LIST_OPERATION_LG EndP BeginCh COMANDS_LIST EndCh 
          COMAND = LOOP 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0015, 0009] (0033,      EndCh) {}}
0016          h = h-1;
          LOOP = InsInfor BeginP ATTRIBUTION IntTo LIST_OPERATION_LG EndP BeginCh COMANDS_LIST EndCh 
          COMAND = LOOP 
          COMANDS_LIST = COMAND 
              [0016, 0009] (0000,         Id) {h}
              [0016, 0011] (0021,      OpAtr) {=}
              [0016, 0013] (0000,         Id) {h}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0016, 0014] (0008,     OpArAd) {-}
          OP_AR = OpArAd 
              [0016, 0015] (0034,   ConstInt) {1}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
          DECLARATION_TYPE = ATTRIBUTION 
              [0016, 0016] (0040,      SepPV) {;}
0017      }
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0017, 0005] (0033,      EndCh) {}}
0018      return a;
          LOOP = InsInWh BeginP LIST_OPERATION_LG EndP BeginCh COMANDS_LIST EndCh 
          COMAND = LOOP 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0018, 0005] (0048,     Return) {return}
              [0018, 0012] (0000,         Id) {a}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          RETURN_TYPE = LIST_OPERATION_LG 
              [0018, 0013] (0040,      SepPV) {;}
0019  }
          RETURN = Return RETURN_TYPE SepPV 
          COMAND = RETURN 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0019, 0001] (0033,      EndCh) {}}
0020  
0021  
0022  Init():int{
          FUNC = Id BeginP PARAMITER_LIST EndP SepPont TYPE_FUNC BeginCh COMANDS_LIST EndCh 
          LIST_FUNC = FUNC 
              [0022, 0001] (0001,       Init) {Init}
              [0022, 0005] (0028,     BeginP) {(}
              [0022, 0006] (0029,       EndP) {)}
              [0022, 0007] (0047,    SepPont) {:}
              [0022, 0008] (0002,    TypeInt) {int}
          TYPE = TypeInt 
          TYPE_FUNC = TYPE 
              [0022, 0011] (0032,    BeginCh) {{}
0023      output("Digite o tamanho: ");
              [0023, 0005] (0044,        Out) {output}
              [0023, 0011] (0028,     BeginP) {(}
              [0023, 0012] (0038, ConstString) {"Digite o tamanho: "}
              [0023, 0032] (0029,       EndP) {)}
              [0023, 0033] (0040,      SepPV) {;}
0024      int tam;
          COMAND = Out BeginP ConstString EndP SepPV 
          COMANDS_LIST = COMAND 
              [0024, 0005] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0024, 0009] (0000,         Id) {tam}
          ATTRIBUTION = Id 
          DECLARATION_TYPE = ATTRIBUTION 
              [0024, 0012] (0040,      SepPV) {;}
0025  input("%var", tam);
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = TYPE DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0025, 0001] (0045,         In) {input}
              [0025, 0006] (0028,     BeginP) {(}
              [0025, 0007] (0038, ConstString) {"%var"}
              [0025, 0013] (0039,       SepV) {,}
              [0025, 0015] (0000,         Id) {tam}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0025, 0018] (0029,       EndP) {)}
              [0025, 0019] (0040,      SepPV) {;}
0026      int[tam] a;
          COMAND = In BeginP ConstString SepV LIST_OPERATION_LG EndP SepPV 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0026, 0005] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0026, 0008] (0030,     BeginC) {[}
              [0026, 0009] (0000,         Id) {tam}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0026, 0012] (0031,       EndC) {]}
          VECTOR_TYPE = TYPE BeginC OPERATION_AR EndC 
              [0026, 0014] (0000,         Id) {a}
          ATTRIBUTION = Id 
          DECLARATION_TYPE = ATTRIBUTION 
              [0026, 0015] (0040,      SepPV) {;}
0027      output("Digite os elementos:\n");
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = VECTOR_TYPE DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0027, 0005] (0044,        Out) {output}
              [0027, 0011] (0028,     BeginP) {(}
              [0027, 0012] (0038, ConstString) {"Digite os elementos:\n"}
              [0027, 0036] (0029,       EndP) {)}
              [0027, 0037] (0040,      SepPV) {;}
0028      for(i = 0 to tam-1){
          COMAND = Out BeginP ConstString EndP SepPV 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0028, 0005] (0027,   InsInfor) {for}
              [0028, 0008] (0028,     BeginP) {(}
              [0028, 0009] (0000,         Id) {i}
              [0028, 0011] (0021,      OpAtr) {=}
              [0028, 0013] (0034,   ConstInt) {0}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
              [0028, 0015] (0042,      IntTo) {to}
              [0028, 0018] (0000,         Id) {tam}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0028, 0021] (0008,     OpArAd) {-}
          OP_AR = OpArAd 
              [0028, 0022] (0034,   ConstInt) {1}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0028, 0023] (0029,       EndP) {)}
              [0028, 0024] (0032,    BeginCh) {{}
0029          input("%var", a[i]);
              [0029, 0009] (0045,         In) {input}
              [0029, 0014] (0028,     BeginP) {(}
              [0029, 0015] (0038, ConstString) {"%var"}
              [0029, 0021] (0039,       SepV) {,}
              [0029, 0023] (0000,         Id) {a}
              [0029, 0024] (0030,     BeginC) {[}
              [0029, 0025] (0000,         Id) {i}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0029, 0026] (0031,       EndC) {]}
          ATRIBVALUE = Id BeginC OPERATION_AR EndC 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0029, 0027] (0029,       EndP) {)}
              [0029, 0028] (0040,      SepPV) {;}
0030      }
          COMAND = In BeginP ConstString SepV LIST_OPERATION_LG EndP SepPV 
          COMANDS_LIST = COMAND 
              [0030, 0005] (0033,      EndCh) {}}
0031      output("Array antes de ordenar:\n");
          LOOP = InsInfor BeginP ATTRIBUTION IntTo LIST_OPERATION_LG EndP BeginCh COMANDS_LIST EndCh 
          COMAND = LOOP 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0031, 0005] (0044,        Out) {output}
              [0031, 0011] (0028,     BeginP) {(}
              [0031, 0012] (0038, ConstString) {"Array antes de ordenar:\n"}
              [0031, 0039] (0029,       EndP) {)}
              [0031, 0040] (0040,      SepPV) {;}
0032      int i;
          COMAND = Out BeginP ConstString EndP SepPV 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0032, 0005] (0002,    TypeInt) {int}
          TYPE = TypeInt 
              [0032, 0009] (0000,         Id) {i}
          ATTRIBUTION = Id 
          DECLARATION_TYPE = ATTRIBUTION 
              [0032, 0010] (0040,      SepPV) {;}
0033      for(i = 0 to tam-1){
          DECLARATION_LIST = DECLARATION_TYPE SepPV 
          VAR_DECLARATION = TYPE DECLARATION_LIST 
          COMAND = VAR_DECLARATION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0033, 0005] (0027,   InsInfor) {for}
              [0033, 0008] (0028,     BeginP) {(}
              [0033, 0009] (0000,         Id) {i}
              [0033, 0011] (0021,      OpAtr) {=}
              [0033, 0013] (0034,   ConstInt) {0}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
              [0033, 0015] (0042,      IntTo) {to}
              [0033, 0018] (0000,         Id) {tam}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0033, 0021] (0008,     OpArAd) {-}
          OP_AR = OpArAd 
              [0033, 0022] (0034,   ConstInt) {1}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0033, 0023] (0029,       EndP) {)}
              [0033, 0024] (0032,    BeginCh) {{}
0034          output("%int ", a[i]);
              [0034, 0009] (0044,        Out) {output}
              [0034, 0015] (0028,     BeginP) {(}
              [0034, 0016] (0038, ConstString) {"%int "}
              [0034, 0023] (0039,       SepV) {,}
              [0034, 0025] (0000,         Id) {a}
              [0034, 0026] (0030,     BeginC) {[}
              [0034, 0027] (0000,         Id) {i}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0034, 0028] (0031,       EndC) {]}
          ATRIBVALUE = Id BeginC OPERATION_AR EndC 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0034, 0029] (0029,       EndP) {)}
              [0034, 0030] (0040,      SepPV) {;}
0035      }
          COMAND = Out BeginP ConstString SepV LIST_OPERATION_LG EndP SepPV 
          COMANDS_LIST = COMAND 
              [0035, 0005] (0033,      EndCh) {}}
0036      output("\n");
          LOOP = InsInfor BeginP ATTRIBUTION IntTo LIST_OPERATION_LG EndP BeginCh COMANDS_LIST EndCh 
          COMAND = LOOP 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0036, 0005] (0044,        Out) {output}
              [0036, 0011] (0028,     BeginP) {(}
              [0036, 0012] (0038, ConstString) {"\n"}
              [0036, 0016] (0029,       EndP) {)}
              [0036, 0017] (0040,      SepPV) {;}
0037      output("Array apos ordenar:\n");
          COMAND = Out BeginP ConstString EndP SepPV 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0037, 0005] (0044,        Out) {output}
              [0037, 0011] (0028,     BeginP) {(}
              [0037, 0012] (0038, ConstString) {"Array apos ordenar:\n"}
              [0037, 0035] (0029,       EndP) {)}
              [0037, 0036] (0040,      SepPV) {;}
0038      a = ShellSort(a, tam);
          COMAND = Out BeginP ConstString EndP SepPV 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0038, 0005] (0000,         Id) {a}
              [0038, 0007] (0021,      OpAtr) {=}
              [0038, 0009] (0000,         Id) {ShellSort}
              [0038, 0018] (0028,     BeginP) {(}
              [0038, 0019] (0000,         Id) {a}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0038, 0020] (0039,       SepV) {,}
              [0038, 0022] (0000,         Id) {tam}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          LI = LIST_OPERATION_LG 
          LI = LIST_OPERATION_LG SepV LI 
              [0038, 0025] (0029,       EndP) {)}
              [0038, 0026] (0040,      SepPV) {;}
0039      for(i = 0 to tam-1){
          FUNC_CALL = Id BeginP LI EndP SepPV 
          ATRIBVALUE = FUNC_CALL 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
          COMAND = ATTRIBUTION 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0039, 0005] (0027,   InsInfor) {for}
              [0039, 0008] (0028,     BeginP) {(}
              [0039, 0009] (0000,         Id) {i}
              [0039, 0011] (0021,      OpAtr) {=}
              [0039, 0013] (0034,   ConstInt) {0}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          ATTRIBUTION = Id OpAtr LIST_OPERATION_LG 
              [0039, 0015] (0042,      IntTo) {to}
              [0039, 0018] (0000,         Id) {tam}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0039, 0021] (0008,     OpArAd) {-}
          OP_AR = OpArAd 
              [0039, 0022] (0034,   ConstInt) {1}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = OPERATION_AR OP_AR ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0039, 0023] (0029,       EndP) {)}
              [0039, 0024] (0032,    BeginCh) {{}
0040          output("%int ", a[i]);
              [0040, 0009] (0044,        Out) {output}
              [0040, 0015] (0028,     BeginP) {(}
              [0040, 0016] (0038, ConstString) {"%int "}
              [0040, 0023] (0039,       SepV) {,}
              [0040, 0025] (0000,         Id) {a}
              [0040, 0026] (0030,     BeginC) {[}
              [0040, 0027] (0000,         Id) {i}
          ATRIBVALUE = Id 
          OPERATION_AR = ATRIBVALUE 
              [0040, 0028] (0031,       EndC) {]}
          ATRIBVALUE = Id BeginC OPERATION_AR EndC 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
              [0040, 0029] (0029,       EndP) {)}
              [0040, 0030] (0040,      SepPV) {;}
0041      }
          COMAND = Out BeginP ConstString SepV LIST_OPERATION_LG EndP SepPV 
          COMANDS_LIST = COMAND 
              [0041, 0005] (0033,      EndCh) {}}
0042      output("\n");
          LOOP = InsInfor BeginP ATTRIBUTION IntTo LIST_OPERATION_LG EndP BeginCh COMANDS_LIST EndCh 
          COMAND = LOOP 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0042, 0005] (0044,        Out) {output}
              [0042, 0011] (0028,     BeginP) {(}
              [0042, 0012] (0038, ConstString) {"\n"}
              [0042, 0016] (0029,       EndP) {)}
              [0042, 0017] (0040,      SepPV) {;}
0043      return 0;
          COMAND = Out BeginP ConstString EndP SepPV 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0043, 0005] (0048,     Return) {return}
              [0043, 0012] (0034,   ConstInt) {0}
          CONST_TYPE = ConstInt 
          ATRIBVALUE = CONST_TYPE 
          OPERATION_AR = ATRIBVALUE 
          OPERATION_RL = OPERATION_AR 
          LIST_OPERATION_LG = OPERATION_RL 
          RETURN_TYPE = LIST_OPERATION_LG 
              [0043, 0013] (0040,      SepPV) {;}
0044  }
          RETURN = Return RETURN_TYPE SepPV 
          COMAND = RETURN 
          COMANDS_LIST = COMANDS_LIST COMAND 
              [0044, 0001] (0033,      EndCh) {}}
          MAIN_FUNC = Init BeginP EndP SepPont TYPE_FUNC BeginCh COMANDS_LIST EndCh 
          INICIAL = LIST_FUNC MAIN_FUNC 
